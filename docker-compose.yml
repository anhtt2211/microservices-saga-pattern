version: "2.6"

services:
  postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - /data/postgres/
    env_file:
      - .env
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
  saga-coordinator-1:
    build:
      context: ./saga-coordinator
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "41:4000"
  saga-coordinator-2:
    build:
      context: ./saga-coordinator
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "42:4000"
  saga-coordinator-backup:
    build:
      context: ./saga-coordinator
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "43:4000"

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "4001:4001"
    env_file:
      - ./order-service/.env
    environment:
      - DATABASE_HOST=host.docker.internal

  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "4002:4002"
    env_file:
      - ./customer-service/.env
    environment:
      - DATABASE_HOST=host.docker.internal

  stock-service:
    build:
      context: ./stock-service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
      - "4003:4003"
    env_file:
      - ./stock-service/.env
    environment:
      - DATABASE_HOST=host.docker.internal

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - saga-coordinator-1
      - saga-coordinator-2
